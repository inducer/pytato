name: CI
on:
    push:
        branches:
        - main
    pull_request:
    schedule:
        - cron:  '17 3 * * 0'

concurrency:
    group: ${{ github.head_ref || github.ref_name }}
    cancel-in-progress: true

jobs:
    ruff:
        name: Ruff
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v4
        -
            uses: actions/setup-python@v5
        -   name: "Main Script"
            run: |
                pip install ruff
                ruff check

    typos:
        name: Typos
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v4
        -   uses: crate-ci/typos@master

    basedpyright:
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v4
        -
            uses: actions/setup-python@v5
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                export EXTRA_INSTALL="git+https://github.com/inducer/arraycontext"
                curl -L -O https://tiker.net/ci-support-v0
                . ./ci-support-v0
                build_py_project_in_conda_env
                python -m pip install pytest
                python -m pip install basedpyright
                basedpyright

    pytest:
        name: Conda Pytest
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v4
        -   name: "Main Script"
            run: |
                curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project-within-miniconda.sh
                . ./build-and-test-py-project-within-miniconda.sh

    examples:
        name: Conda Examples
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v4
        -   name: "Main Script"
            run: |
                curl -L -O https://tiker.net/ci-support-v0
                . ci-support-v0
                build_py_project_in_conda_env
                pip install pytest  # for advection.py

                # ensure that running with optimization works
                python -O examples/demo.py

                run_examples --no-require-main

    docs:
        name: Documentation
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v4
        -
            uses: actions/setup-python@v5
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                ./.ci-support/fix-code-for-docs.sh
                curl -L -O https://tiker.net/ci-support-v0
                . ci-support-v0
                build_py_project_in_conda_env
                build_docs

    downstream_tests:
        strategy:
            matrix:
                downstream_project: [meshmode, mirgecom, grudge, arraycontext]
        name: Tests for downstream project ${{ matrix.downstream_project }}
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v4
        -   name: "Main Script"
            env:
                DOWNSTREAM_PROJECT: ${{ matrix.downstream_project }}
            run: |
                curl -L -O https://tiker.net/ci-support-v0
                . ./ci-support-v0

                test_downstream "$DOWNSTREAM_PROJECT"

                if [[ "$DOWNSTREAM_PROJECT" = "meshmode" ]]; then
                    python ../examples/simple-dg.py --lazy
                fi

                if [[ "$DOWNSTREAM_PROJECT" = "grudge" ]]; then
                    mpirun -n 2 python ../examples/wave/wave-op-mpi.py --lazy

                    # Also test with optimizations on, to check for correct dataclass
                    # inheritance regarding their "frozenness".
                    mpirun -n 2 python -O ../examples/wave/wave-op-mpi.py --lazy
                fi

